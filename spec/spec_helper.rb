# This file was generated by the `rspec --init` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# Require this file using `require "spec_helper"` to ensure that it is only
# loaded once.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
ENV["RACK_ENV"] = "test"

require 'rspec'
require 'rspec/expectations'
require 'rack/test'
require 'json_spec'

require './lib/scenario_db_setup'

JsonSpec.directory ="./fixtures/"

RSpec.configure do |config|
  config.treat_symbols_as_metadata_keys_with_true_values = true
  config.run_all_when_everything_filtered = true
  config.filter_run :focus

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = 'random'

  #include Rack::Test::Methods by default
  config.include Rack::Test::Methods
  config.include JsonSpec::Helpers
end

def configure_test_db
  db_file = File.dirname(File.expand_path(__FILE__)) + '/../data/scenario_testdb.sqlite3'
  if !File.exists?(db_file)
    scenario_db_setup = ScenarioDbSetup.new
    scenario_db_setup.setup_database('scenario_testdb.sqlite3')
    scenario_db_setup.open_database
    scenario_db_setup.create_scenarios_table
    scenario_db_setup.create_routes_table
    scenario_db_setup.create_testdata_table
  end
end

def reset_test_db
  scenario_db_setup = ScenarioDbSetup.new
  scenario_db_setup.setup_database('scenario_testdb.sqlite3')
  scenario_db_setup.open_database

  # remove all existing scenarios
  scenario_db_setup.reset_scenarios
  # add default scenario
  scenario_db_setup.add_scenario("default")
end


def add_scenario(name)

end


